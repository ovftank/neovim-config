local ls = require("luasnip")
local s = ls.snippet
local t = ls.text_node

return {
    s("reset", {
        t("/* CSS Reset */"),
        t({ "", "*, *::before, *::after {" }),
        t({ "", "  box-sizing: border-box;" }),
        t({ "", "  margin: 0;" }),
        t({ "", "  padding: 0;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "html {" }),
        t({ "", "  font-size: 16px;" }),
        t({ "", "  line-height: 1.5;" }),
        t({ "", "  -webkit-text-size-adjust: 100%;" }),
        t({ "", "  -ms-text-size-adjust: 100%;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "body {" }),
        t({ "", "  font-family: system-ui, -apple-system, sans-serif;" }),
        t({ "", "  line-height: inherit;" }),
        t({ "", "  margin: 0;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "h1, h2, h3, h4, h5, h6 {" }),
        t({ "", "  font-size: inherit;" }),
        t({ "", "  font-weight: inherit;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "a {" }),
        t({ "", "  color: inherit;" }),
        t({ "", "  text-decoration: inherit;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "button, input, optgroup, select, textarea {" }),
        t({ "", "  font-family: inherit;" }),
        t({ "", "  font-size: 100%;" }),
        t({ "", "  line-height: inherit;" }),
        t({ "", "  color: inherit;" }),
        t({ "", "  margin: 0;" }),
        t({ "", "  padding: 0;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "button, select {" }),
        t({ "", "  text-transform: none;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "button, [type='button'], [type='reset'], [type='submit'] {" }),
        t({ "", "  -webkit-appearance: button;" }),
        t({ "", "  background-color: transparent;" }),
        t({ "", "  background-image: none;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "img, svg, video, canvas, audio, iframe, embed, object {" }),
        t({ "", "  display: block;" }),
        t({ "", "  vertical-align: middle;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "img, video {" }),
        t({ "", "  max-width: 100%;" }),
        t({ "", "  height: auto;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "ol, ul {" }),
        t({ "", "  list-style: none;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "table {" }),
        t({ "", "  border-collapse: collapse;" }),
        t({ "", "  border-spacing: 0;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "textarea {" }),
        t({ "", "  resize: vertical;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "input::placeholder, textarea::placeholder {" }),
        t({ "", "  opacity: 1;" }),
        t({ "", "  color: #6b7280;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "[role='button'], button {" }),
        t({ "", "  cursor: pointer;" }),
        t({ "", "}" }),
        t({ "", "" }),
        t({ "", "[disabled] {" }),
        t({ "", "  cursor: default;" }),
        t({ "", "}" }),
    }),
    s("twreset", {
        t("@import 'tailwindcss';"),
        t({ "", "" }),
        t("@layer base {"),
        t({ "", "  :root {" }),
        t({ "", "    @apply h-full;" }),
        t({ "", "    touch-action: none;" }),
        t({ "", "    -webkit-tap-highlight-color: transparent;" }),
        t({ "", "    text-rendering: optimizeLegibility;" }),
        t({ "", "    -webkit-font-smoothing: antialiased;" }),
        t({ "", "    -moz-osx-font-smoothing: grayscale;" }),
        t({ "", "    scroll-behavior: smooth;" }),
        t({ "", "    -ms-touch-action: none;" }),
        t({ "", "    -webkit-touch-callout: none;" }),
        t({ "", "    zoom: 1;" }),
        t({ "", "    -moz-transform: scale(1);" }),
        t({ "", "    -webkit-transform: scale(1);" }),
        t({ "", "    transform: scale(1);" }),
        t({ "", "    -ms-zoom: 1;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  @media (prefers-color-scheme: dark) {" }),
        t({ "", "    :root {" }),
        t({ "", "      color-scheme: light;" }),
        t({ "", "    }" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  @media (prefers-color-scheme: light) {" }),
        t({ "", "    :root {" }),
        t({ "", "      color-scheme: light;" }),
        t({ "", "    }" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  * {" }),
        t({
            "",
            "    @apply m-0 box-border appearance-none p-0 focus:outline-none will-change-auto;",
        }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  body {" }),
        t({ "", "    @apply min-h-full;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  button, label, summary, [role='button'] {" }),
        t({ "", "    @apply cursor-pointer select-none touch-none;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  input[type='checkbox']," }),
        t({ "", "  input[type='radio'] {" }),
        t({ "", "    @apply appearance-auto;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  html {" }),
        t({ "", "    @apply touch-none;" }),
        t({ "", "    -webkit-text-size-adjust: 100%;" }),
        t({ "", "    -ms-text-size-adjust: 100%;" }),
        t({ "", "    -moz-text-size-adjust: 100%;" }),
        t({ "", "    text-size-adjust: 100%;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  input::-webkit-outer-spin-button," }),
        t({ "", "  input::-webkit-inner-spin-button {" }),
        t({ "", "    @apply appearance-none;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  input[type='number'] {" }),
        t({ "", "    @apply appearance-none;" }),
        t({ "", "    appearance: textfield;" }),
        t({ "", "    -moz-appearance: textfield;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  img, video, canvas, svg {" }),
        t({ "", "    @apply block max-w-full h-auto;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  img {" }),
        t({ "", "    @apply pointer-events-none select-none will-change-auto;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  [data-loading] {" }),
        t({ "", "    @apply will-change-transform;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  a {" }),
        t({ "", "    @apply text-inherit no-underline;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t({ "", "  textarea {" }),
        t({ "", "    @apply resize-none;" }),
        t({ "", "  }" }),
        t({ "", "" }),
        t("}"),
    }),
}
